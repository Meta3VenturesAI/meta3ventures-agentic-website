const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/agent-utils-CXuTC0dg.js","assets/admin-dashboard-DchSe8jz.js","assets/react-vendor-BihJ1g-O.js","assets/supabase-Bm4t6MAe.js","assets/agent-core-BPrIXLhQ.js","assets/agent-tools-QezIHBTH.js","assets/ui-vendor-DCwBxa8r.js","assets/charts-Drp7lbNo.js","assets/utils-SDRsfljt.js","assets/icons-DqxzN5bj.js","assets/router-fWlUV7jv.js"])))=>i.map(i=>d[i]);
var e=Object.defineProperty,t=(t,o,r)=>((t,o,r)=>o in t?e(t,o,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[o]=r)(t,"symbol"!=typeof o?o+"":o,r);import{a as o}from"./admin-dashboard-DchSe8jz.js";import{k as r,l as s,m as a}from"./agent-utils-CXuTC0dg.js";const n={},i=function(e,t,o){let r=Promise.resolve();if(t&&t.length>0){let e=function(e){return Promise.all(e.map(e=>Promise.resolve(e).then(e=>({status:"fulfilled",value:e}),e=>({status:"rejected",reason:e}))))};document.getElementsByTagName("link");const o=document.querySelector("meta[property=csp-nonce]"),s=o?.nonce||o?.getAttribute("nonce");r=e(t.map(e=>{if((e=function(e){return"/"+e}(e))in n)return;n[e]=!0;const t=e.endsWith(".css"),o=t?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${e}"]${o}`))return;const r=document.createElement("link");return r.rel=t?"stylesheet":"modulepreload",t||(r.as="script"),r.crossOrigin="",r.href=e,s&&r.setAttribute("nonce",s),document.head.appendChild(r),t?new Promise((t,o)=>{r.addEventListener("load",t),r.addEventListener("error",()=>o(new Error(`Unable to preload CSS for ${e}`)))}):void 0}))}function s(e){const t=new Event("vite:preloadError",{cancelable:!0});if(t.payload=e,window.dispatchEvent(t),!t.defaultPrevented)throw e}return r.then(t=>{for(const e of t||[])"rejected"===e.status&&s(e.reason);return e().catch(s)})};class c{constructor(){t(this,"id","ollama"),t(this,"name","Ollama (Local)"),t(this,"baseUrl","/.netlify/functions/agent-proxy"),t(this,"apiKeyRequired",!1),t(this,"supportedModels",["qwen2.5:latest","qwen2.5:7b","qwen2.5:14b","llama3.2:3b","llama3.2:1b","mistral:7b","codellama:7b","neural-chat:7b","starling-lm:7b","phi3:3.8b"]),t(this,"rateLimit",60)}async isAvailable(){try{return(await fetch(`${this.baseUrl}?provider=ollama&action=health`,{method:"GET",headers:{"Content-Type":"application/json"}})).ok}catch(e){return!1}}async generateResponse(e){const t=Date.now();try{const o=await fetch(this.baseUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({provider:"ollama",payload:{model:e.model,messages:e.messages,options:{temperature:e.temperature||.7,num_predict:e.maxTokens||1e3,top_p:e.topP||.9},stream:!1}})});if(!o.ok)throw new Error(`Ollama API error: ${o.status}`);const r=await o.json(),s=Date.now()-t;return{id:`ollama_${Date.now()}`,content:r.message.content,model:e.model,usage:{promptTokens:r.prompt_eval_count||0,completionTokens:r.eval_count||0,totalTokens:(r.prompt_eval_count||0)+(r.eval_count||0)},finishReason:"stop",processingTime:s}}catch(o){throw new Error(`Failed to generate response: ${o.message}`)}}}class l{constructor(){t(this,"id","groq"),t(this,"name","Groq (Fast Inference)"),t(this,"baseUrl","https://api.groq.com/openai/v1"),t(this,"apiKeyRequired",!0),t(this,"supportedModels",["llama3-8b-8192","llama3-70b-8192","mixtral-8x7b-32768","gemma-7b-it"]),t(this,"rateLimit",30)}async isAvailable(){const e=this.getApiKey();if(!e)return!1;try{return(await fetch(`${this.baseUrl}/models`,{headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},timeout:5e3})).ok}catch(t){return!1}}getApiKey(){return"your_groq_api_key_here"}async generateResponse(e){const t=Date.now(),o=this.getApiKey();if(!o)throw new Error("Groq API key not configured");try{const r=await fetch(`${this.baseUrl}/chat/completions`,{method:"POST",headers:{Authorization:`Bearer ${o}`,"Content-Type":"application/json"},body:JSON.stringify({model:e.model,messages:e.messages,temperature:e.temperature||.7,max_tokens:e.maxTokens||1e3,top_p:e.topP||.9,stream:!1})});if(!r.ok){const e=await r.json();throw new Error(`Groq API error: ${e.error?.message||r.status}`)}const s=await r.json(),a=Date.now()-t;return{id:s.id,content:s.choices[0].message.content,model:s.model,usage:{promptTokens:s.usage.prompt_tokens,completionTokens:s.usage.completion_tokens,totalTokens:s.usage.total_tokens},finishReason:s.choices[0].finish_reason,processingTime:a}}catch(r){throw new Error(`Failed to generate response: ${r.message}`)}}}class p{constructor(){t(this,"id","huggingface"),t(this,"name","Hugging Face (Free)"),t(this,"baseUrl","https://api-inference.huggingface.co/models"),t(this,"apiKeyRequired",!1),t(this,"supportedModels",["microsoft/DialoGPT-large","microsoft/DialoGPT-medium","facebook/blenderbot-400M-distill","microsoft/GODEL-v1_1-large-seq2seq","google/flan-t5-large","google/flan-t5-xl","EleutherAI/gpt-j-6b","EleutherAI/gpt-neo-2.7B","bigscience/bloom-560m","bigscience/bloom-1b1","stabilityai/stablelm-tuned-alpha-7b","togethercomputer/RedPajama-INCITE-Chat-3B-v1","HuggingFaceH4/zephyr-7b-beta","microsoft/phi-2","mistralai/Mistral-7B-Instruct-v0.1"]),t(this,"rateLimit",10)}async isAvailable(){try{return 401!==(await fetch(`${this.baseUrl}/microsoft/DialoGPT-medium`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({inputs:"test"})})).status}catch(e){return!1}}getApiKey(){return"your_huggingface_api_key_here"}async generateResponse(e){const t=Date.now(),o=this.getApiKey();if(!o)throw new Error("Hugging Face API key not configured");try{const r=e.messages.map(e=>`${e.role}: ${e.content}`).join("\n"),s=await fetch(`${this.baseUrl}/${e.model}`,{method:"POST",headers:{Authorization:`Bearer ${o}`,"Content-Type":"application/json"},body:JSON.stringify({inputs:r,parameters:{temperature:e.temperature||.7,max_new_tokens:e.maxTokens||1e3,top_p:e.topP||.9,return_full_text:!1}})});if(!s.ok)throw new Error(`Hugging Face API error: ${s.status}`);const a=await s.json(),n=Date.now()-t,i=Array.isArray(a)?a[0]?.generated_text||"":a.generated_text||"";return{id:`hf_${Date.now()}`,content:i.trim(),model:e.model,usage:{promptTokens:Math.ceil(r.length/4),completionTokens:Math.ceil(i.length/4),totalTokens:Math.ceil((r.length+i.length)/4)},finishReason:"stop",processingTime:n}}catch(r){throw new Error(`Failed to generate response: ${r.message}`)}}}class d{constructor(){t(this,"id","openai"),t(this,"name","OpenAI (GPT Models)"),t(this,"baseUrl","https://api.openai.com/v1"),t(this,"apiKeyRequired",!0),t(this,"supportedModels",["gpt-4o","gpt-4o-mini","gpt-4-turbo","gpt-3.5-turbo","gpt-3.5-turbo-16k"]),t(this,"rateLimit",60)}getApiKey(){return"your_openai_api_key_here"}async isAvailable(){const e=this.getApiKey();if(!e)return!1;try{return(await fetch(`${this.baseUrl}/models`,{headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}})).ok}catch(t){return!1}}async generateResponse(e){const t=this.getApiKey();if(!t)throw new Error("OpenAI API key not configured");const o=Date.now();try{const r=await fetch(`${this.baseUrl}/chat/completions`,{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},body:JSON.stringify({model:e.model,messages:e.messages,temperature:e.temperature||.7,max_tokens:e.maxTokens||1e3,top_p:e.topP||.9})});if(!r.ok){const e=await r.json().catch(()=>({}));throw new Error(`OpenAI API error ${r.status}: ${e.error?.message||r.statusText}`)}const s=await r.json(),a=Date.now()-o;if(!s.choices?.[0]?.message?.content)throw new Error("Invalid response format from OpenAI API");return{id:s.id||`openai_${Date.now()}`,content:s.choices[0].message.content,model:s.model||e.model,usage:{promptTokens:s.usage?.prompt_tokens||0,completionTokens:s.usage?.completion_tokens||0,totalTokens:s.usage?.total_tokens||0},finishReason:s.choices[0].finish_reason||"stop",processingTime:a}}catch(r){throw new Error(`Failed to generate response: ${r.message}`)}}}class u{constructor(){t(this,"id","anthropic"),t(this,"name","Anthropic (Claude)"),t(this,"baseUrl","https://api.anthropic.com/v1"),t(this,"apiKeyRequired",!0),t(this,"supportedModels",["claude-3-5-sonnet-20241022","claude-3-opus-20240229","claude-3-sonnet-20240229","claude-3-haiku-20240307"]),t(this,"rateLimit",50)}getApiKey(){return"your_anthropic_api_key_here"}async isAvailable(){return!!this.getApiKey()}async generateResponse(e){const t=this.getApiKey();if(!t)throw new Error("Anthropic API key not configured");const o=Date.now();try{const r=await fetch(`${this.baseUrl}/messages`,{method:"POST",headers:{"x-api-key":t,"Content-Type":"application/json","anthropic-version":"2023-06-01"},body:JSON.stringify({model:e.model,max_tokens:e.maxTokens||1e3,temperature:e.temperature||.7,messages:e.messages.filter(e=>"system"!==e.role),system:e.messages.find(e=>"system"===e.role)?.content})});if(!r.ok){const e=await r.json().catch(()=>({}));throw new Error(`Anthropic API error ${r.status}: ${e.error?.message||r.statusText}`)}const s=await r.json(),a=Date.now()-o;if(!s.content?.[0]?.text)throw new Error("Invalid response format from Anthropic API");return{id:s.id||`anthropic_${Date.now()}`,content:s.content[0].text,model:s.model||e.model,usage:{promptTokens:s.usage?.input_tokens||0,completionTokens:s.usage?.output_tokens||0,totalTokens:(s.usage?.input_tokens||0)+(s.usage?.output_tokens||0)},finishReason:s.stop_reason||"stop",processingTime:a}}catch(r){throw new Error(`Failed to generate response: ${r.message}`)}}}class h{constructor(){t(this,"id","cohere"),t(this,"name","Cohere (Command Models)"),t(this,"baseUrl","https://api.cohere.ai/v1"),t(this,"apiKeyRequired",!0),t(this,"supportedModels",["command-r-plus","command-r","command","command-light"]),t(this,"rateLimit",100)}getApiKey(){const e=localStorage.getItem("cohere_api_key");return e||null}async isAvailable(){return!!this.getApiKey()}async generateResponse(e){const t=this.getApiKey();if(!t)throw new Error("Cohere API key not configured");const o=Date.now();try{const r=e.messages.map(e=>`${e.role}: ${e.content}`).join("\n"),s=await fetch(`${this.baseUrl}/generate`,{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},body:JSON.stringify({model:e.model,prompt:r,temperature:e.temperature||.7,max_tokens:e.maxTokens||1e3,p:e.topP||.9})});if(!s.ok){const e=await s.json().catch(()=>({}));throw new Error(`Cohere API error ${s.status}: ${e.message||s.statusText}`)}const a=await s.json(),n=Date.now()-o;if(!a.generations?.[0]?.text)throw new Error("Invalid response format from Cohere API");return{id:a.id||`cohere_${Date.now()}`,content:a.generations[0].text,model:e.model,usage:{promptTokens:a.meta?.billed_units?.input_tokens||0,completionTokens:a.meta?.billed_units?.output_tokens||0,totalTokens:(a.meta?.billed_units?.input_tokens||0)+(a.meta?.billed_units?.output_tokens||0)},finishReason:a.generations[0].finish_reason||"stop",processingTime:n}}catch(r){throw new Error(`Failed to generate response: ${r.message}`)}}}class m{constructor(){t(this,"id","replicate"),t(this,"name","Replicate (Open Models)"),t(this,"baseUrl","https://api.replicate.com/v1"),t(this,"apiKeyRequired",!0),t(this,"supportedModels",["meta/llama-2-70b-chat","meta/llama-2-13b-chat","meta/llama-2-7b-chat","mistralai/mistral-7b-instruct-v0.1","togethercomputer/alpaca-7b"]),t(this,"rateLimit",50)}getApiKey(){const e=localStorage.getItem("replicate_api_key");return e||null}async isAvailable(){return!!this.getApiKey()}async generateResponse(e){const t=this.getApiKey();if(!t)throw new Error("Replicate API token not configured");const o=Date.now();try{const r=e.messages.map(e=>`${e.role}: ${e.content}`).join("\n"),s=await fetch(`${this.baseUrl}/predictions`,{method:"POST",headers:{Authorization:`Token ${t}`,"Content-Type":"application/json"},body:JSON.stringify({version:this.getModelVersion(e.model),input:{prompt:r,temperature:e.temperature||.7,max_length:e.maxTokens||1e3,top_p:e.topP||.9}})});if(!s.ok){const e=await s.json().catch(()=>({}));throw new Error(`Replicate API error ${s.status}: ${e.detail||s.statusText}`)}let a=await s.json();for(;"starting"===a.status||"processing"===a.status;){await new Promise(e=>setTimeout(e,1e3));const e=await fetch(`${this.baseUrl}/predictions/${a.id}`,{headers:{Authorization:`Token ${t}`,"Content-Type":"application/json"}});a=await e.json()}const n=Date.now()-o;if("failed"===a.status)throw new Error(`Prediction failed: ${a.error||"Unknown error"}`);const i=Array.isArray(a.output)?a.output.join(""):a.output||"";return{id:a.id||`replicate_${Date.now()}`,content:i,model:e.model,usage:{promptTokens:0,completionTokens:0,totalTokens:0},finishReason:"stop",processingTime:n}}catch(r){throw new Error(`Failed to generate response: ${r.message}`)}}getModelVersion(e){const t={"meta/llama-2-70b-chat":"02e509c789964a7ea8736978a43525956ef40397be9033abf9fd2badfe68c9e3","meta/llama-2-13b-chat":"f4e2de70d66816a838a89eeeb621910adffb0dd0baba3976c96980970978018d","meta/llama-2-7b-chat":"13c3cdee13ee059ab779f0291d29054dab00a47dad8261375654de5540165fb0"};return t[e]||t["meta/llama-2-7b-chat"]}}class g{constructor(){t(this,"id","deepseek"),t(this,"name","DeepSeek (Chinese AI)"),t(this,"baseUrl","https://api.deepseek.com/v1"),t(this,"apiKeyRequired",!0),t(this,"supportedModels",["deepseek-chat","deepseek-coder","deepseek-math","deepseek-reasoner"]),t(this,"rateLimit",60)}getApiKey(){return"your_deepseek_api_key_here"}async isAvailable(){const e=this.getApiKey();if(!e)return!1;try{return(await fetch(`${this.baseUrl}/models`,{headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}})).ok}catch(t){return!1}}async generateResponse(e){const t=this.getApiKey();if(!t)throw new Error("DeepSeek API key not configured");const o=Date.now();try{const r=await fetch(`${this.baseUrl}/chat/completions`,{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},body:JSON.stringify({model:e.model,messages:e.messages,temperature:e.temperature||.7,max_tokens:e.maxTokens||1e3,top_p:e.topP||.9,stream:!1})});if(!r.ok)throw new Error(`DeepSeek API error: ${r.status}`);const s=await r.json(),a=Date.now()-o;return{id:s.id,content:s.choices[0].message.content,model:s.model,usage:{promptTokens:s.usage?.prompt_tokens||0,completionTokens:s.usage?.completion_tokens||0,totalTokens:s.usage?.total_tokens||0},finishReason:s.choices[0].finish_reason||"stop",processingTime:a}}catch(r){throw new Error(`Failed to generate response: ${r.message}`)}}}class y{constructor(){t(this,"id","localai"),t(this,"name","LocalAI (Self-hosted)"),t(this,"baseUrl","/.netlify/functions/agent-proxy"),t(this,"apiKeyRequired",!1),t(this,"supportedModels",["gpt-3.5-turbo","gpt-4","llama2-chat","codellama-instruct","mistral-instruct"]),t(this,"rateLimit",1e3)}async isAvailable(){try{return(await fetch(`${this.baseUrl}?provider=localai&action=health`,{method:"GET",headers:{"Content-Type":"application/json"}})).ok}catch(e){return!1}}async generateResponse(e){const t=Date.now(),o=await fetch(this.baseUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({provider:"localai",payload:{model:e.model,messages:e.messages,temperature:e.temperature||.7,max_tokens:e.maxTokens||1e3,top_p:e.topP||.9}})}),r=await o.json(),s=Date.now()-t;return{id:r.id,content:r.choices[0].message.content,model:r.model,usage:{promptTokens:r.usage?.prompt_tokens||0,completionTokens:r.usage?.completion_tokens||0,totalTokens:r.usage?.total_tokens||0},finishReason:r.choices[0].finish_reason,processingTime:s}}}const f=new class{constructor(){t(this,"providers",new Map),t(this,"fallbackChain",["ollama","deepseek","groq","huggingface","localai","openai","anthropic","cohere","replicate"]),t(this,"configuredKeys",new Map),this.initializeProviders(),this.loadStoredApiKeys(),this.initializeProviderRegistry()}initializeProviders(){this.providers.set("ollama",new c),this.providers.set("huggingface",new p),this.providers.set("localai",new y),this.providers.set("groq",new l),this.providers.set("deepseek",new g),this.providers.set("openai",new d),this.providers.set("anthropic",new u),this.providers.set("cohere",new h),this.providers.set("replicate",new m)}initializeProviderRegistry(){i(()=>import("./agent-utils-CXuTC0dg.js").then(e=>e.O),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10])),i(()=>import("./agent-utils-CXuTC0dg.js").then(e=>e.n),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10]))}async getAvailableProviders(){const e=[];for(const[r,s]of this.providers.entries()){const t=await s.isAvailable();e.push({id:r,name:s.name,available:t,models:s.supportedModels})}const t=r.getAllProviders();for(const r of t){const t=await r.isAvailable();e.push({id:r.id,name:r.name,available:t,models:["dynamic"]})}const o=await s.isAvailable();return e.push({id:"fallback",name:"Fallback Agent Service",available:o,models:["fallback-agent"]}),e}async testLLMProvider(e){const t=this.providers.get(e);if(!t)return o.logLLMInteraction(e,"unknown",{action:"test_provider",error:"Provider not found"},"failure"),!1;try{o.logLLMInteraction(e,t.supportedModels[0]||"unknown",{action:"test_provider_start",timestamp:(new Date).toISOString()});if(!(await t.isAvailable()))return o.logLLMInteraction(e,t.supportedModels[0]||"unknown",{action:"test_provider",error:"Provider not available"},"failure"),!1;const r={model:t.supportedModels[0],messages:[{role:"user",content:'Hello, this is a test. Please respond with "Test successful".'}],temperature:.1,maxTokens:50},s=Date.now(),a=await t.generateResponse(r),n=Date.now()-s,i=!!(a.content&&a.content.length>0);return o.logLLMInteraction(e,r.model,{action:"test_provider",duration_ms:n,response_length:a.content?.length||0,tokens_used:a.usage?.totalTokens||0,success:i},i?"success":"failure"),i}catch(r){return o.logLLMInteraction(e,t.supportedModels[0]||"unknown",{action:"test_provider",error:r.message,stack:r.stack},"failure"),!1}}async generateResponse(e,t,o={}){let r=o.preferredProvider;if(!r)for(const[s,l]of this.providers.entries())if(l.supportedModels.includes(e)){if(await l.isAvailable()){r=s;break}}if(!r)throw new Error(`No available provider found for model: ${e}`);const a=this.providers.get(r);if(!a)throw new Error(`Provider not found: ${r}`);const n={model:e,messages:t,temperature:o.temperature,maxTokens:o.maxTokens,topP:o.topP};try{return await a.generateResponse(n)}catch(i){for(const e of this.fallbackChain){if(e===r)continue;const t=this.providers.get(e);if(!t)continue;if(!(await t.isAvailable()))continue;const o=t.supportedModels[0];if(o)try{const e={...n,model:o};return await t.generateResponse(e)}catch(c){continue}}try{return await s.generateResponse(n)}catch(c){throw i}}}async testConnection(e){const t=this.providers.get(e);if(!t)return{success:!1,error:"Provider not found"};const o=Date.now();try{if(!(await t.isAvailable()))return{success:!1,error:"Provider not available"};const e={model:t.supportedModels[0],messages:[{role:"user",content:"Hello"}],maxTokens:10};await t.generateResponse(e);return{success:!0,latency:Date.now()-o}}catch(r){return{success:!1,error:r.message}}}loadStoredApiKeys(){try{["groq","openai","anthropic","cohere","replicate","huggingface","deepseek"].forEach(e=>{const t=localStorage.getItem(`${e}_api_key`);t&&this.configuredKeys.set(e,t)})}catch(e){}}setApiKey(e,t){const o=this.providers.get(e);if(!o)return!1;if(!o.apiKeyRequired)return!1;try{return this.configuredKeys.set(e,t),localStorage.setItem(`${e}_api_key`,t),!0}catch(r){return!1}}removeApiKey(e){try{return this.configuredKeys.delete(e),localStorage.removeItem(`${e}_api_key`),!0}catch(t){return!1}}hasApiKey(e){return this.configuredKeys.has(e)||!!localStorage.getItem(`${e}_api_key`)}getConfiguredProviders(){const e=[];for(const[t,o]of this.providers.entries())e.push({id:t,name:o.name,requiresKey:o.apiKeyRequired,hasKey:this.hasApiKey(t),models:o.supportedModels});return e}getProviderRequirements(){const e=[];for(const[t,o]of this.providers.entries()){const r=this.hasApiKey(t);e.push({id:t,name:o.name,apiKeyRequired:o.apiKeyRequired,apiKeyConfigured:r,keySourceDescription:this.getKeySourceDescription(t),setupInstructions:this.getSetupInstructions(t)})}return e}getKeySourceDescription(e){return{groq:"Get your free API key from https://console.groq.com",openai:"Get your API key from https://platform.openai.com/account/api-keys",anthropic:"Get your API key from https://console.anthropic.com",cohere:"Get your API key from https://dashboard.cohere.ai",replicate:"Get your API token from https://replicate.com/account",huggingface:"Get your API key from https://huggingface.co/settings/tokens",deepseek:"Get your API key from https://platform.deepseek.com",ollama:"Install Ollama locally: https://ollama.ai",localai:"Set up LocalAI: https://github.com/go-skynet/LocalAI"}[e]||"Check provider documentation for API key information"}getSetupInstructions(e){return{groq:"1. Sign up at console.groq.com\n2. Generate an API key\n3. Configure in admin settings",openai:"1. Sign up at platform.openai.com\n2. Add payment method\n3. Generate API key\n4. Configure in admin settings",anthropic:"1. Sign up at console.anthropic.com\n2. Request access to API\n3. Generate API key\n4. Configure in admin settings",cohere:"1. Sign up at dashboard.cohere.ai\n2. Generate API key\n3. Configure in admin settings",replicate:"1. Sign up at replicate.com\n2. Add payment method\n3. Generate API token\n4. Configure in admin settings",huggingface:"1. Sign up at huggingface.co\n2. Create access token\n3. Configure in admin settings",deepseek:"1. Sign up at platform.deepseek.com\n2. Generate API key\n3. Configure in admin settings",ollama:"1. Install Ollama: curl -fsSL https://ollama.ai/install.sh | sh\n2. Start server: ollama serve\n3. Enable CORS: OLLAMA_ORIGINS=* ollama serve",localai:"1. Install LocalAI\n2. Configure models\n3. Start server on localhost:8080"}[e]||"Check provider documentation for setup instructions"}configureFromEnvironment(){const e={groq:"your_groq_api_key_here",openai:"your_openai_api_key_here",anthropic:"your_anthropic_api_key_here",cohere:void 0,replicate:void 0,huggingface:"your_huggingface_api_key_here",deepseek:"your_deepseek_api_key_here"};for(const[t,o]of Object.entries(e))o&&o.trim()&&this.setApiKey(t,o.trim())}exportConfiguration(){return{providers:Array.from(this.providers.keys()),configuredProviders:Array.from(this.configuredKeys.keys()),availabilityStatus:{}}}async performHealthCheck(){const e={};for(const[o,r]of this.providers.entries())try{const t=Date.now(),s=await r.isAvailable(),a=Date.now()-t;e[o]={available:s,latency:a}}catch(t){e[o]={available:!1,error:t.message}}return e}},w=class e{constructor(){t(this,"preConfiguredModels",[{id:"llama-3.1-70b-versatile",name:"Llama 3.1 70B (Groq)",provider:"groq",modelId:"llama-3.1-70b-versatile",contextLength:32768,strengths:["General conversation","Reasoning","Analysis"],useCase:"general",speed:"fast",quality:"high",requiresApiKey:!0,free:!0},{id:"llama-3.1-8b-instant",name:"Llama 3.1 8B (Groq)",provider:"groq",modelId:"llama-3.1-8b-instant",contextLength:8192,strengths:["Fast responses","General chat","Quick analysis"],useCase:"general",speed:"fast",quality:"good",requiresApiKey:!0,free:!0},{id:"mixtral-8x7b-32768",name:"Mixtral 8x7B (Groq)",provider:"groq",modelId:"mixtral-8x7b-32768",contextLength:32768,strengths:["Multilingual","Complex reasoning","Long context"],useCase:"reasoning",speed:"fast",quality:"high",requiresApiKey:!0,free:!0},{id:"microsoft-dialoGPT-large",name:"DialoGPT Large",provider:"huggingface",modelId:"microsoft/DialoGPT-large",contextLength:1024,strengths:["Conversational","Natural dialogue","Personality"],useCase:"general",speed:"medium",quality:"good",requiresApiKey:!1,free:!0},{id:"google-flan-t5-large",name:"FLAN-T5 Large",provider:"huggingface",modelId:"google/flan-t5-large",contextLength:512,strengths:["Instruction following","Q&A","Summarization"],useCase:"analysis",speed:"medium",quality:"good",requiresApiKey:!1,free:!0},{id:"llama3.2-3b",name:"Llama 3.2 3B (Ollama)",provider:"ollama",modelId:"llama3.2:3b",contextLength:8192,strengths:["Local processing","Privacy","Fast inference"],useCase:"general",speed:"fast",quality:"good",requiresApiKey:!1,free:!0},{id:"mistral-7b",name:"Mistral 7B (Ollama)",provider:"ollama",modelId:"mistral:7b",contextLength:8192,strengths:["Instruction following","Reasoning","Coding"],useCase:"coding",speed:"medium",quality:"high",requiresApiKey:!1,free:!0},{id:"codellama-7b",name:"Code Llama 7B (Ollama)",provider:"ollama",modelId:"codellama:7b",contextLength:4096,strengths:["Code generation","Code analysis","Programming help"],useCase:"coding",speed:"medium",quality:"high",requiresApiKey:!1,free:!0}])}static getInstance(){return e.instance||(e.instance=new e),e.instance}getAvailableModels(){return this.preConfiguredModels}getModelsByProvider(e){return this.preConfiguredModels.filter(t=>t.provider===e)}getModelsByUseCase(e){return this.preConfiguredModels.filter(t=>t.useCase===e)}getFreeModels(){return this.preConfiguredModels.filter(e=>e.free)}getModelsWithoutApiKey(){return this.preConfiguredModels.filter(e=>!e.requiresApiKey)}getRecommendedModel(e="general"){const t=this.getModelsByUseCase(e);if(0===t.length)return this.getModelsByUseCase("general")[0]||this.preConfiguredModels[0];return t.sort((e,t)=>{if(e.free!==t.free)return e.free?-1:1;if(e.speed!==t.speed){const o={fast:0,medium:1,slow:2};return o[e.speed]-o[t.speed]}if(e.quality!==t.quality){const o={high:0,good:1,medium:2};return o[e.quality]-o[t.quality]}return 0})[0]}getModelById(e){return this.preConfiguredModels.find(t=>t.id===e)||null}getOptimizedSettings(e){const t=this.getModelById(e);if(!t)return{temperature:.7,maxTokens:1e3,topP:.9};const o={temperature:.7,maxTokens:Math.min(1e3,Math.floor(.3*t.contextLength)),topP:.9};switch(t.useCase){case"coding":o.temperature=.3,o.topP=.8;break;case"reasoning":o.temperature=.5,o.maxTokens=Math.min(1500,Math.floor(.4*t.contextLength));break;case"creative":o.temperature=.9,o.topP=.95;break;case"analysis":o.temperature=.4,o.maxTokens=Math.min(2e3,Math.floor(.5*t.contextLength))}return o}getSetupInstructions(e){const t=this.getModelById(e);if(!t)return{provider:"unknown",instructions:["Model not found"]};switch(t.provider){case"groq":return{provider:"Groq",instructions:["1. Sign up for free Groq account at console.groq.com","2. Generate API key in dashboard","3. Add to Netlify environment variables","4. Test connection in admin panel"],environmentVars:["VITE_GROQ_API_KEY"],testCommand:"Test LLM Provider: Groq"};case"huggingface":return{provider:"Hugging Face",instructions:["1. Create account at huggingface.co (optional for some models)","2. Generate API token in settings (if needed)","3. Add to environment variables","4. Test connection"],environmentVars:["VITE_HUGGINGFACE_API_KEY"],testCommand:"Test LLM Provider: Hugging Face"};case"ollama":return{provider:"Ollama",instructions:["1. Install Ollama locally: curl -fsSL https://ollama.ai/install.sh | sh","2. Start Ollama server: ollama serve",`3. Pull model: ollama pull ${t.modelId}`,"4. Configure CORS: OLLAMA_ORIGINS=* ollama serve","5. Set Netlify environment variable for production"],environmentVars:["OLLAMA_URL"],testCommand:"Test LLM Provider: Ollama"};default:return{provider:t.provider,instructions:["Setup instructions not available for this provider"]}}}};t(w,"instance");const k=w.getInstance(),v=class e{constructor(){t(this,"vectorDB"),t(this,"isInitialized",!1),this.vectorDB=new a}static getInstance(){return e.instance||(e.instance=new e),e.instance}async initialize(){if(!this.isInitialized)try{await Promise.race([this.vectorDB.initializeDatabase(),new Promise((e,t)=>setTimeout(()=>t(new Error("Vector DB initialization timeout")),5e3))]),this.isInitialized=!0}catch(e){this.isInitialized=!0}}async search(e){const t=Date.now();try{this.isInitialized||await this.initialize();const o={topK:e.topK||5,threshold:e.threshold||.1,category:e.category,includeMetadata:!1!==e.includeMetadata},r=await this.vectorDB.search(e.query,o),s=Date.now()-t;return{success:!0,data:{query:e.query,results:r,totalResults:r.length,processingTime:s,metadata:{timestamp:(new Date).toISOString(),category:e.category,threshold:o.threshold}}}}catch(o){return{success:!1,error:o instanceof Error?o.message:"Unknown error occurred"}}}async addKnowledge(e){try{this.isInitialized||await this.initialize();return{success:!0,id:await this.vectorDB.addDocument(e)}}catch(t){return{success:!1,error:t instanceof Error?t.message:"Unknown error occurred"}}}async getKnowledge(e){try{return this.isInitialized||await this.initialize(),await this.vectorDB.getDocument(e)}catch(t){return null}}async getAllKnowledge(){try{return this.isInitialized||await this.initialize(),await this.vectorDB.getAllDocuments()}catch(e){return[]}}async deleteKnowledge(e){try{return this.isInitialized||await this.initialize(),await this.vectorDB.deleteDocument(e)}catch(t){return!1}}async getStats(){try{this.isInitialized||await this.initialize();return{...await this.vectorDB.getStats(),lastUpdated:new Date}}catch(e){return{totalDocuments:0,categories:{},sources:{},lastUpdated:new Date}}}async searchByCategory(e,t,o=5){return this.search({query:t,category:e,topK:o,threshold:.1,includeMetadata:!0})}async searchFunding(e){return this.searchByCategory("funding",e,3)}async searchMarketResearch(e){return this.searchByCategory("market-research",e,3)}async searchInvestment(e){return this.searchByCategory("investment",e,3)}async searchBusinessPlanning(e){return this.searchByCategory("business-planning",e,3)}async searchValuation(e){return this.searchByCategory("valuation",e,3)}async searchMetrics(e){return this.searchByCategory("metrics",e,3)}async searchValidation(e){return this.searchByCategory("validation",e,3)}async searchPitchDeck(e){return this.searchByCategory("pitch-deck",e,3)}async contextualSearch(e,t,o=5){const r=`${e} ${t}`.trim();return this.search({query:r,context:t,topK:o,threshold:.15,includeMetadata:!0})}async multiCategorySearch(e,t,o=5){const r=[];for(const a of t){const t=await this.searchByCategory(a,e,o);t.success&&t.data&&r.push(...t.data.results)}r.sort((e,t)=>t.similarity-e.similarity);const s=r.slice(0,o);return{success:!0,data:{query:e,results:s,totalResults:s.length,processingTime:0,metadata:{timestamp:(new Date).toISOString(),category:t.join(","),threshold:.1}}}}};t(v,"instance");let b=v;const _=Object.freeze(Object.defineProperty({__proto__:null,RAGService:b},Symbol.toStringTag,{value:"Module"}));export{_ as R,i as _,f as l,k as o};
